{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AppForm.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","styles","messages","dialog","to","id","name","message","maxLength200","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","cn","fields","createFiend","requiredField","Input","Textarea","addMessage","Dialogs","messagesElements","dialogsPage","map","key","dialogs","formData","sendMessageCreator","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","Component","RedirectComponent","this","React"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,oBCAhED,EAAOC,QAAU,CAAC,SAAW,0BAA0B,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,2B,oBCA/ID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,WAAa,8B,iHCc9EC,EAXC,SAAAC,GACZ,OACI,yBAAKC,UAAYC,IAAOC,UACpB,yBAAKF,UAAYC,IAAOE,QACpB,kBAAC,IAAD,CAASC,GAAE,mBAAcL,EAAMM,KAAQN,EAAMO,OAEjD,yBAAKN,UAAYC,IAAOM,SAAYR,EAAMQ,W,4DCHhDC,EAAeC,YAAiB,KAmBvBC,EAFaC,YAAU,CAACC,KAAM,WAAjBD,EAfL,SAAAZ,GAEnB,OACI,0BAAMc,SAAWd,EAAMe,aAAed,UAAWC,IAAOW,MACpD,yBAAKZ,UAAYe,IAAGd,IAAOe,OAAQ,iBAC7BC,YAAY,kBAAmB,WAAY,CAACC,KAAgBC,KAC5DF,YAAY,qBAAsB,iBAAkB,CAACC,IAAeV,GAAeY,MAEzF,yBAAKpB,UAAWC,IAAOoB,YACnB,wDCUDC,EAtBC,SAAAvB,GAAU,IAGhBwB,EADexB,EAAMyB,YAAnBtB,SAEKuB,KAAK,SAAAlB,GAAO,OACjB,kBAAC,EAAD,CAASmB,IAAMnB,EAAQF,GAAKC,KAAOC,EAAQD,KAAOC,QAAUA,EAAQA,QAAUF,GAAKE,EAAQF,QAMnG,OACI,yBAAKL,UAAWC,IAAO0B,SACnB,yBAAK3B,UAAWC,IAAOC,UACnB,iCAAQqB,IAEZ,kBAAC,EAAD,CAAqBV,SATP,SAAAe,GAClB7B,EAAM8B,mBAAoBD,Q,wDCV9BE,EAA6B,SAAAC,GAAK,MAAK,CACvCC,OAAQD,EAAME,KAAKD,S,OCGjBE,EAAmBC,YACrBC,aAHoB,SAAAL,GAAW,MAAO,CAAEP,YAAaO,EAAMP,eAGlC,CAAEK,0BDDC,SAAAQ,GAAc,IACvCC,EADsC,iLAGjC,OAAKC,KAAKxC,MAAMiC,OAET,kBAACK,EAAcE,KAAKxC,OAFK,kBAAC,IAAD,CAAUK,GAAG,eAHZ,GACZoC,IAAMH,WAQnC,OAAOD,YAAQN,EAARM,CAAoCE,KCTtBH,CAGtBb,GAEYY","file":"static/js/4.1c6bbeb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1mchy\",\"messages\":\"Dialogs_messages__2xwgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1pN3y\",\"dialogsItems\":\"Message_dialogsItems__3rDaM\",\"dialog\":\"Message_dialog__mcqjV\",\"message\":\"Message_message__3STsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AppForm_form__3ZmLE\",\"fields\":\"AppForm_fields__r3jkE\",\"addMessage\":\"AppForm_addMessage__2Fw6Q\"};","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Message = props => {\r\n    return(\r\n        <div className={ styles.messages }>\r\n            <div className={ styles.dialog }>\r\n                <NavLink to={`/dialogs/${props.id}`}>{ props.name }</NavLink>\r\n            </div>\r\n            <div className={ styles.message }>{ props.message }</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./AppForm.module.css\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\r\nimport { Textarea, Input, createFiend } from \"../../common/FormsControls/FormsControls\";\r\nimport cn from \"classnames\";\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst AddMessageForm = props => {\r\n\r\n    return (\r\n        <form onSubmit={ props.handleSubmit } className={styles.form}>\r\n            <div className={ cn(styles.fields, \"fieldsCommon\")}>\r\n                { createFiend(\"Enter your Name\", \"userName\", [requiredField], Input) }\r\n                { createFiend(\"Enter your message\", \"newMessageBody\", [requiredField, maxLength200], Textarea) }\r\n            </div>\r\n            <div className={styles.addMessage}>\r\n                <button >Add new message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"message\"})( AddMessageForm );\r\n\r\nexport default AddMessageReduxForm;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\n\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageReduxForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = props => {\r\n\r\n    const { messages } = props.dialogsPage;\r\n    const messagesElements =\r\n        messages.map( message =>\r\n            <Message key={ message.id } name={ message.name } message={ message.message } id={ message.id }/>);\r\n\r\n    const addNewMessage = formData => {\r\n        props.sendMessageCreator( formData );\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.messages}>\r\n                <div> { messagesElements }</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={ addNewMessage }/>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = Component => {\r\n class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth ) return <Redirect to=\"/login\"/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n};","import { sendMessageCreator } from \"../../redux/dialogs/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = state => { return { dialogsPage: state.dialogsPage } };\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, { sendMessageCreator }),\r\n    WithAuthRedirect\r\n)( Dialogs );\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}